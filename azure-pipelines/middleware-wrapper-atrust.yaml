jobs:
- job: style
  displayName: Style linting
  strategy:
    matrix:
      stable:
        rust: stable
  pool:
    vmImage: windows-latest
  continueOnError: $[eq(variables.rust, 'beta')]
  steps:
    - template: templates/install-rust.yaml
      parameters:
        rust: $(rust)
        components:
          - rustfmt
          - clippy

    - script: cargo fmt --all -- --check
      displayName: cargo fmt

    - script: cargo clippy --all
      displayName: cargo clippy

- job: test
  displayName: Run Tests
  dependsOn: []
  strategy:
    matrix:
      windows:
        vmImage: windows-latest
        rust: stable
  pool:
    vmImage: $(vmImage)
  steps:
    - template: templates/install-rust.yaml
      parameters:
        rust: $(rust)

    - script: cargo check --no-default-features
      displayName: cargo check

    - script: cargo test --all-features
      displayName: cargo test

    - script: cargo doc --no-deps
      displayName: cargo doc

- job: build
  displayName: Build
  dependsOn: test
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
  strategy:
    matrix:
      windows-x64:
        vmImage: windows-latest
        rust: stable
        target: x64
      windows-x86:
        vmImage: windows-latest
        rust: stable-i686
        target: x86
  pool:
    vmImage: $(vmImage)
  steps:
    - template: templates/install-rust.yaml
      parameters:
        rust: $(rust)

    - script: cargo +$(rust) build --release
      displayName: cargo build $(target)
    
    - task: CopyFiles@2
      inputs:
        SourceFolder: target/release
        Contents: |
          *.dll
          asigntseonline.conf
        TargetFolder: $(Build.ArtifactStagingDirectory)
        

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: $(target)
